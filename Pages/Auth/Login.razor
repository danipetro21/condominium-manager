@page "/login"
@inject AuthService AuthService
@inject NavigationManager Navigation
@inject ILogger<Login> Logger
@using System.ComponentModel.DataAnnotations
@using cem.Services

<MudContainer MaxWidth="MaxWidth.Small" Class="mt-10">
    <MudPaper Elevation="10" Class="pa-8">
        <MudText Typo="Typo.h4" Class="mb-4">Accedi al tuo account</MudText>
        <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <MudTextField Label="Email" 
                         @bind-Value="loginModel.Email" 
                         Required="true" 
                         InputType="InputType.Email"
                         Class="mb-4" />
            <MudTextField Label="Password" 
                         @bind-Value="loginModel.Password" 
                         InputType="InputType.Password" 
                         Required="true" 
                         Class="mb-4" />

            <MudButton ButtonType="ButtonType.Submit" 
                      Color="Color.Primary" 
                      FullWidth="true" 
                      Class="mt-4">Login</MudButton>
        </EditForm>

        @if (errorMessage != null)
        {
            <MudAlert Severity="Severity.Error" Class="mt-4">@errorMessage</MudAlert>
        }
    </MudPaper>
</MudContainer>

@code {
    private LoginModel loginModel = new() { Email = "", Password = "" };
    private string? errorMessage;

    private class LoginModel
    {
        [Required(ErrorMessage = "L'email è obbligatoria")]
        [EmailAddress(ErrorMessage = "Formato email non valido")]
        public string Email { get; set; }

        [Required(ErrorMessage = "La password è obbligatoria")]
        public string Password { get; set; }
    }

    private async Task HandleLogin()
    {
        try 
        {
            Logger.LogInformation($"Tentativo di login con email: {loginModel.Email}");
            
            if (await AuthService.LoginAsync(loginModel.Email, loginModel.Password))
            {
                Logger.LogInformation("Login riuscito, reindirizzamento alla home");
                Navigation.NavigateTo("/");
            }
            else
            {
                Logger.LogWarning("Login fallito");
                errorMessage = "Email o password non validi.";
            }
        }
        catch (Exception ex)
        {
            Logger.LogError($"Errore durante il login: {ex}");
            errorMessage = "Si è verificato un errore durante il login";
        }
    }
}